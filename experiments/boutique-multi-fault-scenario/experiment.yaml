kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: boutique-multi-fault-scenario-1657185180
  namespace: hce
  labels:
    subject: boutique-multi-fault-scenario
spec:
  templates:
    - name: custom-chaos
      steps:
        - - name: pod-memory-hog-experiment
            template: pod-memory-hog-experiment
          - name: pod-cpu-hog-experiment
            template: pod-cpu-hog-experiment
          - name: pod-io-stress-experiment
            template: pod-io-stress-experiment
        - - name: pod-memory-hog-ruy
            template: pod-memory-hog-ruy
          - name: pod-cpu-hog-xmv
            template: pod-cpu-hog-xmv
          - name: pod-io-stress-8zn
            template: pod-io-stress-8zn

    - name: pod-cpu-hog-experiment
      inputs:
        artifacts:
          - name: pod-cpu-hog-wmv
            path: /tmp/pod-cpu-hog-wmv.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects CPU consumption on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-cpu-hog
                  labels:
                    name: pod-cpu-hog
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: ci
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: chaosnative/go-runner:3.0.1-saas
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-cpu-hog
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: CPU_CORES
                        value: "1"
                      - name: CPU_LOAD
                        value: "100"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: RAMP_TIME
                        value: "" 
                      - name: LIB_IMAGE
                        value: chaosnative/go-runner:3.0.1-saas
                      - name: CONTAINER_RUNTIME
                        value: 'containerd'
                      - name: SOCKET_PATH
                        value: '/run/containerd/containerd.sock'
                      - name: DEFAULT_HEALTH_CHECK
                        value: 'false'
                      - name: TARGET_PODS
                        value: ""
                      - name: TARGET_CONTAINER
                        value: ''
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-cpu-hog
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: ci
      container:
        name: ""
        image: docker.io/chaosnative/k8s:2.13.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-cpu-hog-wmv.yaml -n
            {{workflow.parameters.adminModeNamespace}} && sleep 30

    - name: pod-memory-hog-experiment
      inputs:
        artifacts:
            - name: pod-memory-hog-ruy
              path: /tmp/pod-memory-hog-ruy.yaml
              raw:
                data: >
                  apiVersion: litmuschaos.io/v1alpha1
                  description:
                    message: |
                      Injects memory consumption on pods belonging to an app deployment
                  kind: ChaosExperiment
                  metadata:
                    name: pod-memory-hog
                    labels:
                      name: pod-memory-hog
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: ci
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: chaosnative/go-runner:3.0.1-saas
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-memory-hog
                      command:
                        - /bin/bash
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: MEMORY_CONSUMPTION
                          value: "500"
                        - name: NUMBER_OF_WORKERS
                          value: "1"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: RAMP_TIME
                          value: "" 
                        - name: LIB_IMAGE
                          value: chaosnative/go-runner:3.0.1-saas
                        - name: CONTAINER_RUNTIME
                          value: 'containerd'
                        - name: SOCKET_PATH
                          value: '/run/containerd/containerd.sock'
                        - name: SEQUENCE
                          value: parallel
                        - name: TARGET_PODS
                          value: ""
                        - name: TARGET_CONTAINER
                          value: ''
                        - name: DEFAULT_HEALTH_CHECK
                          value: 'false'
                        - name: NODE_LABEL
                          value: ""
                      labels:
                        name: pod-memory-hog
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: ci
      container:
        name: ""
        image: docker.io/chaosnative/k8s:2.13.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-memory-hog-ruy.yaml -n
            {{workflow.parameters.adminModeNamespace}} && sleep 30

    - name: pod-io-stress-experiment
      inputs:
        artifacts:
            - name: pod-io-stress-8zn
              path: /tmp/pod-io-stress-8zn.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  description:
                    message: |
                      IO stress on a app pods belonging to an app deployment
                  kind: ChaosExperiment
                  metadata:
                    name: pod-io-stress
                    labels:
                      name: pod-io-stress
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: chaosexperiment
                      app.kubernetes.io/version: ci
                  spec:
                    definition:
                      scope: Namespaced
                      permissions:
                        - apiGroups:
                            - ""
                          resources:
                            - pods
                          verbs:
                            - create
                            - delete
                            - get
                            - list
                            - patch
                            - update
                            - deletecollection
                        - apiGroups:
                            - ""
                          resources:
                            - events
                          verbs:
                            - create
                            - get
                            - list
                            - patch
                            - update
                        - apiGroups:
                            - ""
                          resources:
                            - configmaps
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - ""
                          resources:
                            - pods/log
                          verbs:
                            - get
                            - list
                            - watch
                        - apiGroups:
                            - ""
                          resources:
                            - pods/exec
                          verbs:
                            - get
                            - list
                            - create
                        - apiGroups:
                            - apps
                          resources:
                            - deployments
                            - statefulsets
                            - replicasets
                            - daemonsets
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - apps.openshift.io
                          resources:
                            - deploymentconfigs
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - ""
                          resources:
                            - replicationcontrollers
                          verbs:
                            - get
                            - list
                        - apiGroups:
                            - argoproj.io
                          resources:
                            - rollouts
                          verbs:
                            - list
                            - get
                        - apiGroups:
                            - batch
                          resources:
                            - jobs
                          verbs:
                            - create
                            - list
                            - get
                            - delete
                            - deletecollection
                        - apiGroups:
                            - litmuschaos.io
                          resources:
                            - chaosengines
                            - chaosexperiments
                            - chaosresults
                          verbs:
                            - create
                            - list
                            - get
                            - patch
                            - update
                            - delete
                      image: chaosnative/go-runner:3.0.1-saas
                      imagePullPolicy: Always
                      args:
                        - -c
                        - ./experiments -name pod-io-stress
                      command:
                        - /bin/bash
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                          value: "10"
                        - name: FILESYSTEM_UTILIZATION_BYTES
                          value: ""
                        - name: NUMBER_OF_WORKERS
                          value: "4"
                        - name: PODS_AFFECTED_PERC
                          value: ""
                        - name: VOLUME_MOUNT_PATH
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: TARGET_CONTAINER
                          value: ''
                        - name: NODE_LABEL
                          value: ""
                        - name: RAMP_TIME
                          value: "" 
                        - name: LIB_IMAGE
                          value: chaosnative/go-runner:3.0.1-saas
                        - name: CONTAINER_RUNTIME
                          value: 'containerd'
                        - name: DEFAULT_HEALTH_CHECK
                          value: 'false'
                        - name: SOCKET_PATH
                          value: '/run/containerd/containerd.sock'
                        - name: SEQUENCE
                          value: parallel
                      labels:
                        name: pod-io-stress
                        app.kubernetes.io/part-of: litmus
                        app.kubernetes.io/component: experiment-job
                        app.kubernetes.io/runtime-api-usage: "true"
                        app.kubernetes.io/version: ci
      container:
        name: ""
        image: docker.io/chaosnative/k8s:2.13.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-io-stress-8zn.yaml -n
            {{workflow.parameters.adminModeNamespace}} && sleep 30

    - name: pod-memory-hog-ruy
      inputs:
        artifacts:
            - name: pod-memory-hog-ruy
              path: /tmp/chaosengine-pod-memory-hog-ruy.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    namespace: "{{workflow.parameters.adminModeNamespace}}"
                    generateName: pod-memory-hog-ruy
                    labels:
                      instance_id: 68dbc5a6-620b-49e7-acbf-46b40ff85fc3
                      workflow_name: pod-memory-hog-1658478266
                  spec:
                    engineState: active
                    appinfo:
                      appns: boutique
                      applabel: app=cartservice
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-memory-hog
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: MEMORY_CONSUMPTION
                                value: "300"
                              - name: PODS_AFFECTED_PERC
                                value: ""
                              - name: CONTAINER_RUNTIME
                                value: 'containerd'
                              - name: SOCKET_PATH
                                value: '/run/containerd/containerd.sock'
                          probe:
                          - name: carts-resource-status-check
                            type: cmdProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 1000
                              retry: 0
                              interval: 1
                              stopOnFailure: true
                            cmdProbe/inputs:
                              command: ./healthcheck -name pod-level
                              source:
                                image: chaosnative/go-runner:3.0.1-saas
                                inheritInputs: true
                              comparator:
                                type: string
                                criteria: contains
                                value: "[P000]"
                          - name: cart-service-availability-check
                            type: httpProbe
                            mode: Continuous
                            httpProbe/inputs:
                              url: http://frontend:80/cart
                              insecureSkipVerify: false
                              method:
                                get:
                                  criteria: ==
                                  responseCode: "200"
                            runProperties:
                              probeTimeout: 2000
                              interval: 5
                              retry: 4
                              probePollingInterval: 2
                              initialDelaySeconds: 1
                              stopOnFailure: false
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/chaosnative/litmus-checker:2.13.0
        args:
          - -file=/tmp/chaosengine-pod-memory-hog-ruy.yaml
          - -saveName=/tmp/engine-name

    - name: pod-cpu-hog-xmv
      inputs:
        artifacts:
          - name: pod-cpu-hog-xmv
            path: /tmp/chaosengine-pod-cpu-hog-xmv.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: pod-cpu-hog-wmv
                  labels:
                    instance_id: fd6491b4-acf1-4225-805c-a8926b172080
                    workflow_name: pod-cpu-hog-1658477155
                spec:
                  engineState: active
                  appinfo:
                    appns: boutique
                    applabel: app=adservice
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-cpu-hog
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: CPU_CORES
                              value: "1"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: 'containerd'
                            - name: SOCKET_PATH
                              value: '/run/containerd/containerd.sock'
                        probe:
                          - name: adservice-resource-status-check
                            type: cmdProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 1000
                              retry: 0
                              interval: 1
                              stopOnFailure: true
                            cmdProbe/inputs:
                              command: ./healthcheck -name pod-level
                              source:
                                image: chaosnative/go-runner:3.0.1-saas
                                inheritInputs: true
                              comparator:
                                type: string
                                criteria: contains
                                value: "[P000]"
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/chaosnative/litmus-checker:2.13.0
        args:
          - -file=/tmp/chaosengine-pod-cpu-hog-xmv.yaml
          - -saveName=/tmp/engine-name

    - name: pod-io-stress-8zn
      inputs:
        artifacts:
            - name: pod-io-stress-8zn
              path: /tmp/chaosengine-pod-io-stress-8zn.yaml
              raw:
                data: |
                  apiVersion: litmuschaos.io/v1alpha1
                  kind: ChaosEngine
                  metadata:
                    namespace: "{{workflow.parameters.adminModeNamespace}}"
                    generateName: pod-io-stress-8zn
                    labels:
                      instance_id: 271b628b-3e5e-49f9-984d-91c908be9d82
                      workflow_name: pod-io-stress-1658478992
                  spec:
                    engineState: active
                    appinfo:
                      appns: boutique
                      applabel: app=paymentservice
                      appkind: deployment
                    chaosServiceAccount: litmus-admin
                    experiments:
                      - name: pod-io-stress
                        spec:
                          components:
                            env:
                              - name: TOTAL_CHAOS_DURATION
                                value: "60"
                              - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                                value: "10"
                              - name: PODS_AFFECTED_PERC
                                value: ""
                              - name: CONTAINER_RUNTIME
                                value: 'containerd'
                              - name: SOCKET_PATH
                                value: '/run/containerd/containerd.sock'
                          probe:
                          - name: carts-resource-status-check
                            type: cmdProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 1000
                              retry: 0
                              interval: 1
                              stopOnFailure: true
                            cmdProbe/inputs:
                              command: ./healthcheck -name pod-level
                              source:
                                image: chaosnative/go-runner:3.0.1-saas
                                inheritInputs: true
                              comparator:
                                type: string
                                criteria: contains
                                value: "[P000]"
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/chaosnative/litmus-checker:2.13.0
        args:
          - -file=/tmp/chaosengine-pod-io-stress-8zn.yaml
          - -saveName=/tmp/engine-name

    - name: cleanup-chaos-resources
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - "kubectl delete chaosengine -l 'instance_id in
            (2760c483-64b6-4b65-a70d-368b72e7549b, )' -n
            {{workflow.parameters.adminModeNamespace}} "
  entrypoint: custom-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
